/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Pared: THREE.Mesh;
    Plane201: THREE.Mesh;
    Plane201_1: THREE.Mesh;
    Circle043: THREE.Mesh;
    Circle044: THREE.Mesh;
    Circle045: THREE.Mesh;
    Circle046: THREE.Mesh;
    Cylinder002_1: THREE.Mesh;
    Cylinder002_2: THREE.Mesh;
    Plane153: THREE.Mesh;
  };
  materials: {
    cream_yellow_light: THREE.MeshStandardMaterial;
    cream_grey_metallic: THREE.MeshStandardMaterial;
    cream_dark: THREE.MeshStandardMaterial;
    cream_dark_wood: THREE.MeshStandardMaterial;
    cream_naranja_intenso: THREE.MeshStandardMaterial;
    Posters: THREE.MeshStandardMaterial;
  };
};

export function Wall(
  props: JSX.IntrinsicElements["group"]
) {
  const { nodes, materials } = useGLTF(
    "/models/Wall.glb"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Pared.geometry}
        material={materials.cream_yellow_light}
      />
      <group position={[43.34, 15.46, -14.88]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane201.geometry}
          material={materials.cream_grey_metallic}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane201_1.geometry}
          material={materials.cream_dark}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle043.geometry}
        material={materials.cream_dark_wood}
        position={[43.69, 14.72, 5.49]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.22}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle044.geometry}
        material={materials.cream_dark_wood}
        position={[75.6, 14.72, 5.49]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.22}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle045.geometry}
        material={materials.cream_dark_wood}
        position={[43.69, 9.79, -14.72]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.22}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle046.geometry}
        material={materials.cream_dark_wood}
        position={[69.47, 9.79, -14.72]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.22}
      />
      <group
        position={[57.67, 11.04, -14.73]}
        rotation={[-Math.PI, 0, 0]}
        scale={-0.53}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cylinder002_1.geometry}
          material={materials.cream_naranja_intenso}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cylinder002_2.geometry}
          material={materials.cream_grey_metallic}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane153.geometry}
        material={materials.Posters}
      />
    </group>
  );
}

useGLTF.preload("/models/Wall.glb");
